# =============================================================================
# VARIABLES D'ENVIRONNEMENT - PROJET LMS IA
# =============================================================================
# Copiez ce fichier vers .env et remplissez les valeurs
# ⚠️ NE JAMAIS committer le fichier .env avec de vraies clés

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================

# LOCAL DEVELOPMENT (par défaut - Supabase CLI)
# Ces valeurs sont générées automatiquement par `supabase start`
NEXT_PUBLIC_SUPABASE_URL=http://127.0.0.1:54321
NEXT_PUBLIC_SUPABASE_ANON_KEY=__SET_SUPABASE_ANON_KEY__
SUPABASE_SERVICE_ROLE_KEY=__SET_SUPABASE_SERVICE_ROLE_KEY__
SUPABASE_JWT_SECRET=__SET_SUPABASE_JWT_SECRET__
SUPABASE_DB_URL=postgresql://postgres:postgres@127.0.0.1:54322/postgres
SUPABASE_PROJECT_REF=__SET_SUPABASE_PROJECT_REF__

# PRODUCTION (à configurer pour le déploiement)
# Obtenez ces valeurs depuis https://app.supabase.com/project/_/settings/api
# NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
# NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key
# SUPABASE_SERVICE_ROLE_KEY=your-service-role-key
# SUPABASE_DATABASE_PASSWORD=your-db-password
# SUPABASE_ACCESS_TOKEN=your-personal-access-token
# SUPABASE_PROJECT_REF=your-project-ref

# =============================================================================
# IA SERVICES
# =============================================================================

# Google Gemini (obligatoire pour l'évaluation conversationnelle)
# Obtenez votre clé sur https://makersuite.google.com/app/apikey
GOOGLE_AI_API_KEY=your-gemini-api-key-here
# Compatibilité avec config.ts
GEMINI_API_KEY=${GOOGLE_AI_API_KEY}
GEMINI_MODEL=gemini-2.5-flash

# OpenAI (optionnel pour Supabase Studio AI features)
# Obtenez votre clé sur https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here

# =============================================================================
# PAIEMENTS
# =============================================================================

# Stripe (obligatoire pour les paiements)
# Test keys depuis https://dashboard.stripe.com/test/apikeys
STRIPE_PUBLISHABLE_KEY=pk_test_your-stripe-publishable-key
# Exposition côté client si nécessaire (Next.js)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
# Webhook secret depuis https://dashboard.stripe.com/test/webhooks
STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret

# Domaines Stripe pour CSP (configurable pour sécurité)
STRIPE_JS_DOMAIN=https://js.stripe.com
STRIPE_API_DOMAIN=https://api.stripe.com

# =============================================================================
# CONTENU VIDEO
# =============================================================================

# Mux (obligatoire pour le streaming vidéo)
# Obtenez vos tokens sur https://dashboard.mux.com/settings/access-tokens
MUX_TOKEN_ID=your-mux-token-id
MUX_TOKEN_SECRET=your-mux-token-secret
# Webhook secret depuis https://dashboard.mux.com/settings/webhooks
MUX_WEBHOOK_SECRET=your-mux-webhook-secret

# Domaines Mux (configurables pour Next.js images et CSP)
MUX_DOMAIN=image.mux.com
MUX_STREAM_DOMAIN=stream.mux.com
# Domaines Mux pour CSP (configurable pour sécurité)
MUX_JS_DOMAIN=https://stream.mux.com

# =============================================================================
# AUTHENTIFICATION SOCIALE
# =============================================================================

# Google OAuth (obligatoire pour l'auth Google)
# Console Google Cloud: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# =============================================================================
# EMAIL & NOTIFICATIONS
# =============================================================================

# Configuration SMTP (optionnel pour emails transactionnels)
# SendGrid, Postmark, ou autre provider SMTP
SMTP_HOST=smtp.sendgrid.net
SMTP_PORT=587
SMTP_USER=apikey
SMTP_PASS=your-smtp-api-key

# =============================================================================
# DÉVELOPPEMENT
# =============================================================================

# Environnement Next.js
NODE_ENV=development

# URL de l'application (ajustez selon votre setup)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Nom et version app
NEXT_PUBLIC_APP_NAME=LMS IA
NEXT_PUBLIC_APP_VERSION=0.1.0

# API et timeouts
NEXT_PUBLIC_API_BASE_URL=http://localhost:3000/api
API_TIMEOUT=10000
API_RETRIES=3

# oRPC / API interne (server-only)
# Préfixe d’API orpc (peut être dérivé de NEXT_PUBLIC_API_BASE_URL)
ORPC_PREFIX=/api/rpc
# Taille max des payloads (octets)
API_MAX_BODY=1048576
# Budgets rate-limit par minute
API_RATE_LIMIT_ANON_PER_MIN=60
API_RATE_LIMIT_USER_PER_MIN=120
# Provider rate-limit: 'memory' (défaut) ou 'redis'
RATE_LIMIT_PROVIDER=memory

# Upstash Redis (si RATE_LIMIT_PROVIDER=redis)
# Créez un projet Upstash puis ajoutez les valeurs suivantes
# UPSTASH_REDIS_REST_URL=https://...upstash.io
# UPSTASH_REDIS_REST_TOKEN=XXXX

# Limites et session
MAX_FILE_SIZE=10485760
MAX_UPLOAD_COUNT=5
SESSION_TIMEOUT=3600000

# Feature flags (exposition côté client)
NEXT_PUBLIC_FEATURE_AI_CHAT=false
NEXT_PUBLIC_FEATURE_CERTIFICATES=false
NEXT_PUBLIC_FEATURE_ANALYTICS=false
NEXT_PUBLIC_FEATURE_SOCIAL=false

# Middleware d'auth (garde activable)
NEXT_PUBLIC_ENABLE_AUTH_MIDDLEWARE=false

# Niveau de logs pour le debugging
LOG_LEVEL=debug

# CSP toggles
CSP_USE_NONCE=false
CSP_REPORT_ONLY=false

# =============================================================================
# MONITORING & ANALYTICS (optionnel)
# =============================================================================

# Sentry pour le monitoring des erreurs
# SENTRY_DSN=your-sentry-dsn

# Analytics (Mixpanel, Amplitude, etc.)
# MIXPANEL_TOKEN=your-mixpanel-token
# AMPLITUDE_API_KEY=your-amplitude-key

# =============================================================================
# NOTES D'UTILISATION
# =============================================================================

# 1. DÉVELOPPEMENT LOCAL :
#    - Utilisez les valeurs par défaut Supabase (déjà remplies)
#    - Démarrez avec `supabase start`
#    - Remplissez au minimum GOOGLE_AI_API_KEY pour les fonctionnalités IA

# 2. PRODUCTION :
#    - Commentez les valeurs locales
#    - Décommentez et configurez les valeurs de production
#    - Utilisez des variables d'environnement sécurisées (Vercel, Railway, etc.)

# 3. SÉCURITÉ :
#    - Ne jamais committer ce fichier avec de vraies clés
#    - Utilisez des clés de test en développement
#    - Rotez régulièrement vos clés en production
# Debug & Monitoring
# Activer la simulation des données de monitoring (mock) pour la page /debug/monitoring
NEXT_PUBLIC_ENABLE_DEBUG_MOCKS=false

# Content Security Policy (CSP)
# CSP stricte par défaut: n'autorise PAS les styles inline en production.
# Pour le développement, 'unsafe-inline' est autorisé automatiquement.

# Domaines Google Fonts pour CSP (configurable pour sécurité)
GOOGLE_FONTS_DOMAIN=fonts.googleapis.com
GOOGLE_FONTS_STATIC_DOMAIN=fonts.gstatic.com

